from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, FSInputFile
from app.keyboards import main, regions_keyboard, user_keyboard
from app.user import setUser
from app.variables import user, regions_btns
from app.requests import getCurrentRegion, moveToRegion, toJob
from app.user import getUser

from app.functions import getRegionsToMove, getTimeMoveToRegion

router = Router()

@router.message(CommandStart())
async def send_welcome(message: Message):
    print(message.from_user)
    await message.answer("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ò–≥—Ä–∞—Ç—å'", reply_markup=main)

@router.message(F.photo)
async def photo_handler(message: Message):
    photo_data= message.photo[-1]
    await message.answer(f"{photo_data}")
    
@router.message(lambda message: message.text == "üë®‚Äçüíª –ö–∞–∫ –≤–æ–π—Ç–∏?")
async def on_how_to_join(message: Message):
    await message.answer(f"1. –ó–∞–π–¥–∏—Ç–µ –≤ https://www.heroeswm.ru/map.php\n2.–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ü–ö–ú –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–¥'")
    await message.answer_photo(photo=FSInputFile(path='./app/images/Guide_1.png'))
    await message.answer(f"3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–π—Å—è –∫–æ–Ω—Å–æ–ª–∏, –Ω–∞ –≤–∫–ª–∞–¥–∫—É –°–µ—Ç—å/Network.\n4. –ù–∞–π–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º 'map.php'\n5. –ù–∞–∂–º–∏—Ç–µ –ü–ö–ú –ø–æ –∑–∞–ø—Ä–æ—Å—É\n6. –ù–∞–≤–∏–¥–∏—Ç–µ—Å—å –Ω–∞ '–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å/copy'\n7. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ cURL (bash)/Copy as cURL (bash)'")
    await message.answer_photo(photo=FSInputFile(path='./app/images/Guide_2.png'))
    await message.answer(f"8. –ó–∞–π–¥–∏—Ç–µ –≤ https://curlconverter.com/python/\n9. –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤ –ø–æ–ª–µ 'curl command'\n10. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞—á–∏–Ω–∞—è —Å 'cookes=...' –∏ –¥–æ –∫–æ–Ω—Ü–∞ —Å–∫–æ–±–æ–∫ headers")
    await message.answer_photo(photo=FSInputFile(path='./app/images/Guide_3.png'))
    await message.answer(f"11. –í–≤–µ–¥–∏—Ç–µ –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—É /auth '–≤—Å—Ç–≤—å—Ç–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'")
    await message.answer_photo(photo=FSInputFile(path='./app/images/Guide_4.png'))
    
@router.message(lambda message: message.text == "‚õèÔ∏è –†–∞–±–æ—Ç–∞—Ç—å")
async def on_job(message: Message):
    await toJob()
    await message.answer(f"–í—ã —Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É!")

@router.message(lambda message: message.text == "üöó –°–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω")
async def on_how_to_join(message: Message):
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω", reply_markup=regions_keyboard)

@router.message(Command('auth'))
async def auth_handler(message: Message):
    status = setUser(message.text)
    if status == 500:
        await message.answer(f"–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
    else:
        await getUser()
        await getCurrentRegion()
        await message.answer(f"–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!", reply_markup=user_keyboard)


@router.callback_query(lambda callback: callback.data in regions_btns)
async def on_regions_to_move(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer(f"–ì–µ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –≤ {callback.data}")
    regions_for_move = getRegionsToMove(callback.data)
    total_time = getTimeMoveToRegion(len(regions_for_move))
    user.rest_move_time = total_time
    await callback.message.answer(f"–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è: {user.rest_move_time}")
    await moveToRegion(callback.data, regions_for_move)
    await callback.message.answer(f"–ì–µ—Ä–æ–π –ø—Ä–∏–±—ã–ª!")


# @router.callback_query(F.data == 'AuthNo')
# async def onAuthNo(callback: CallbackQuery):
#     await callback.answer()
#     await on_auth(callback.message)


@router.message(Command('location'))
async def location(message: Message):
    region = await getCurrentRegion()
    await message.answer(region)
